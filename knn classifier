import numpy as np 
import pandas as pd 
import matplotlib.pyplot as plt 
import time

%matplotlib inline
from sklearn.datasets import load_digits

digits = load_digits()

X = digits.images

from sklearn.metrics import accuracy_score,confusion_matrix # metrics error
from sklearn.model_selection import train_test_split # resampling method

X = digits.data
y = digits.target

# since its a multi-class prediction, in order to prevent error we need some library
from sklearn.multiclass import OneVsRestClassifier

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=0)

from sklearn.neighbors import KNeighborsClassifier

knn = OneVsRestClassifier(KNeighborsClassifier())

knn.fit(X_train,y_train)

knn.predict(X_test[0].reshape(1,-1))

predictions = knn.predict(X_test)# predict for multiple observation (images) at once
knn.predict(X_test[0:10])


predictions = knn.predict(X_test)

%time
print('KNN Accuracy: %.3f' % accuracy_score(y_test,predictions))


import seaborn as sns

cf_matrix = confusion_matrix(y_test,predictions)

sns.heatmap(cf_matrix, annot=True).
